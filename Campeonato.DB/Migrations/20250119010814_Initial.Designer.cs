// <auto-generated />
using System;
using Campeonato.DB.Futebol;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Campeonato.DB.Futebol.Migrations
{
    [DbContext(typeof(FutebolDbContext))]
    [Migration("20250119010814_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Campeonato.CL.Domain.Entities.FutebolDB.Campeonato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomePopular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Região")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Campeonatos");
                });

            modelBuilder.Entity("Campeonato.CL.Domain.Entities.FutebolDB.EdicaoAtual", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CampeonatoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomePopular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temporada")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CampeonatoId")
                        .IsUnique()
                        .HasFilter("[CampeonatoId] IS NOT NULL");

                    b.ToTable("EdicoesAtuais");
                });

            modelBuilder.Entity("Campeonato.CL.Domain.Entities.FutebolDB.FaseAtual", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CampeonatoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CampeonatoId")
                        .IsUnique()
                        .HasFilter("[CampeonatoId] IS NOT NULL");

                    b.ToTable("FasesAtuais");
                });

            modelBuilder.Entity("Campeonato.CL.Domain.Entities.FutebolDB.RodadaAtual", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CampeonatoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rodada")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CampeonatoId")
                        .IsUnique()
                        .HasFilter("[CampeonatoId] IS NOT NULL");

                    b.ToTable("RodadasAtuais");
                });

            modelBuilder.Entity("Campeonato.CL.Domain.Entities.FutebolDB.EdicaoAtual", b =>
                {
                    b.HasOne("Campeonato.CL.Domain.Entities.FutebolDB.Campeonato", "Campeonato")
                        .WithOne("EdicaoAtual")
                        .HasForeignKey("Campeonato.CL.Domain.Entities.FutebolDB.EdicaoAtual", "CampeonatoId");

                    b.Navigation("Campeonato");
                });

            modelBuilder.Entity("Campeonato.CL.Domain.Entities.FutebolDB.FaseAtual", b =>
                {
                    b.HasOne("Campeonato.CL.Domain.Entities.FutebolDB.Campeonato", "Campeonato")
                        .WithOne("FaseAtual")
                        .HasForeignKey("Campeonato.CL.Domain.Entities.FutebolDB.FaseAtual", "CampeonatoId");

                    b.Navigation("Campeonato");
                });

            modelBuilder.Entity("Campeonato.CL.Domain.Entities.FutebolDB.RodadaAtual", b =>
                {
                    b.HasOne("Campeonato.CL.Domain.Entities.FutebolDB.Campeonato", "Campeonato")
                        .WithOne("RodadaAtual")
                        .HasForeignKey("Campeonato.CL.Domain.Entities.FutebolDB.RodadaAtual", "CampeonatoId");

                    b.Navigation("Campeonato");
                });

            modelBuilder.Entity("Campeonato.CL.Domain.Entities.FutebolDB.Campeonato", b =>
                {
                    b.Navigation("EdicaoAtual");

                    b.Navigation("FaseAtual");

                    b.Navigation("RodadaAtual");
                });
#pragma warning restore 612, 618
        }
    }
}
